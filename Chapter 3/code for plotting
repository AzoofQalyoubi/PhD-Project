Chapter 3

##All plots generated by Spyder Python (3.8.10) 

#####################################################################################################################################################

##codes that used for box plot showing the distribution of DNA concentration (ng/μl) for infected and uninfected samples

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Data preparation
data = {
    'Sample': ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8'],
    'Concentration (ng/μl)': [8.38, 7.73, 12.57, 4.90, 11.74, 8.07, 8.10, 7.57],
    'Infection Status': ['Infected', 'Uninfected', 'Infected', 'Uninfected', 'Uninfected', 'Infected', 'Infected', 'Uninfected']
}

df = pd.DataFrame(data)

# Box Plot of Concentration by Infection Status
plt.figure(figsize=(10, 6))
sns.boxplot(data=df, x='Infection Status', y='Concentration (ng/μl)')
plt.title('Box Plot of Concentration by Infection Status')
plt.xlabel('Infection Status')
plt.ylabel('Concentration (ng/μl)')
plt.show()

##codes that used box plot showing the distribution of total DNA amount (μg) for infected and uninfected samples.

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Data preparation
data = {
    'Sample': ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8'],
    'Total Amount (μg)': [0.30995, 0.28608, 0.46494, 0.18134, 0.43453, 0.29859, 0.29985, 0.27998],
    'Infection Status': ['Infected', 'Uninfected', 'Infected', 'Uninfected', 'Uninfected', 'Infected', 'Infected', 'Uninfected']
}

df = pd.DataFrame(data)

# Box Plot of Total Amount by Infection Status
plt.figure(figsize=(10, 6))
sns.boxplot(data=df, x='Infection Status', y='Total Amount (μg)')
plt.title('Box Plot of Total Amount by Infection Status')
plt.xlabel('Infection Status')
plt.ylabel('Total Amount (μg)')
plt.show()


##codes for generated Total Reads Before and After Filtering plot

import matplotlib.pyplot as plt

# Data preparation
samples = ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8']
reads_before = [43873950, 9499571, 42837215, 48780282, 20488990, 12826160, 10266935, 12238181]
reads_after = [43050824, 8708203, 41973639, 47871087, 20300360, 12712224, 10165708, 12127660]

# Plot 1: Total Reads Before and After Filtering
plt.figure(figsize=(10, 6))
plt.bar(samples, reads_before, alpha=0.7, label='Before Filtering')
plt.bar(samples, reads_after, alpha=0.7, label='After Filtering')
plt.title('Total Reads Before and After Filtering')
plt.ylabel('Total Reads')
plt.legend()
plt.tight_layout()
plt.show()

## codes used for Q20 and Q30 Bases Before and After Filtering plot 

import matplotlib.pyplot as plt

# Data preparation
samples = ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8']
q20_before = [97.5053, 94.3935, 97.3740, 97.2044, 98.52485, 98.59745, 98.4931, 98.58455]
q20_after = [98.0879, 97.3952, 98.0158, 97.8393, 98.8161, 98.8470, 98.7627, 98.8414]
q30_before = [93.709, 87.37065, 93.4488, 92.9644, 95.44825, 95.92895, 95.65705, 95.8713]
q30_after = [94.6832, 92.4243, 94.5167, 94.02395, 95.9419, 96.3408, 96.10135, 96.2964]

# Plot 2: Q20 and Q30 Bases Before and After Filtering
plt.figure(figsize=(10, 6))
plt.plot(samples, q20_before, marker='o', label='Q20 Before')
plt.plot(samples, q20_after, marker='o', label='Q20 After')
plt.plot(samples, q30_before, marker='o', label='Q30 Before')
plt.plot(samples, q30_after, marker='o', label='Q30 After')
plt.title('Q20 and Q30 Bases Before and After Filtering')
plt.ylabel('Percentage (%)')
plt.legend()
plt.tight_layout()
plt.show()

## codes that used for duplicate reads for each sample.
import matplotlib.pyplot as plt

# Data preparation
samples = ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8']
duplication_rate = [5.63358, 39.7194, 5.75382, 6.57727, 44.3526, 41.2051, 46.4052, 41.4316]

# Plot 3: Duplication Rate
plt.figure(figsize=(10, 6))
plt.bar(samples, duplication_rate, color='orange')
plt.title('Duplication Rate')
plt.ylabel('Duplication Rate (%)')
plt.tight_layout()
plt.show()

## codes for Plot shows Insert size peak

import matplotlib.pyplot as plt

# Data preparation
samples = ['Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8']
insert_size_peak = [266, 152, 231, 269, 269, 268, 268, 268]

# Plot 4: Insert Size Peak
plt.figure(figsize=(10, 6))
plt.bar(samples, insert_size_peak, color='green')
plt.title('Insert Size Peak')
plt.ylabel('Insert Size Peak (bp)')
plt.tight_layout()
plt.show()

#########################################################################################################


